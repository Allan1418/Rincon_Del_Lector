"""
Django settings for api_core project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import json
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$@kids75u!9vzo7@#p#6%sn=y1hv46-x!ghe143zbi=h5vft#0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    "rest_framework",
    "rest_framework.authtoken",
    'dj_rest_auth',
    'dj_rest_auth.registration',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    "drf_spectacular",
    "libros",
    "usuarios"
]

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
PASSWORD_RESET_TIMEOUT = 86400
FRONTEND_URL = 'http://localhost:5173'

# configuracion de usuario

AUTH_USER_MODEL = 'usuarios.Usuario'
#ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_LOGIN_METHODS = ["username", "email"]
ACCOUNT_SIGNUP_FIELDS = ["username*", "email*", "password1*", "password2*"]
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_PRESERVE_USERNAME_CASING = True
ACCOUNT_EMAIL_VERIFICATION = "none"
#ACCOUNT_USERNAME_REQUIRED = True
SITE_ID = 1

# Silencia los warnings de MySQL
SILENCED_SYSTEM_CHECKS = ["models.W036"]


# Silencia USERNAME_REQUIRED y EMAIL_REQUIRED deprecados
import warnings

warnings.filterwarnings(
    "ignore",
    message="app_settings.USERNAME_REQUIRED is deprecated.*",
    category=UserWarning,
)

warnings.filterwarnings(
    "ignore",
    message="app_settings.EMAIL_REQUIRED is deprecated.*",
    category=UserWarning,
)


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # librerias externas
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'api_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'api_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# borrar
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

try:
    file_path = os.path.join(BASE_DIR, '..', 'connections', 'mysqlConnection.json')
    with open(file_path) as f:
        secrets = json.loads(f.read())

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': secrets['DATABASE_NAME'],
            'USER': secrets['DATABASE_USER'],
            'PASSWORD': secrets['DATABASE_PASSWORD'],
            'HOST': secrets['DATABASE_HOST'],
            'PORT': secrets['DATABASE_PORT'],
        }
    }
except FileNotFoundError as e:
    raise Exception(f"Error: Archivo de configuracion mysqlConnection.json no encontrado en: {os.path.join(BASE_DIR, '..', '..', 'connections', 'mysqlConnection.json')}") from e

CORS_ALLOWED_ORIGINS = [FRONTEND_URL]

# revisar
# admin.site.register(Usuario, UserAdmin)

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

REST_AUTH = {
    "USER_DETAILS_SERIALIZER": "usuarios.serializers.CustomUserDetailsSerializer",
    "LOGIN_SERIALIZER": "usuarios.serializers.CustomLoginSerializer",
    'PASSWORD_RESET_SERIALIZER': 'usuarios.serializers.CustomPasswordResetSerializer',
    'PASSWORD_RESET_CONFIRM_SERIALIZER': 'usuarios.serializers.CustomPasswordResetConfirmSerializer',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Your Project API',
    'DESCRIPTION': 'Your project description',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': True,
}